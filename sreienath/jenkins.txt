
To Uninstal jdk:
$sudo apt purge openjdk-11-*

To install jdk:
apt-get update
sudo apt install -y openjdk-8-jdk

to check which java is installed
$dpkg -l | grep openjdk





First, add the repository key to the system:
wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -  (this is new gpc key check in web)
After the key is added the system will return with OK.

Next, let’s append the Debian package repository address to the server’s sources.list:
sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'

After both commands have been entered, we’ll run update so that apt will use the new repository.

sudo apt update
Finally, we’ll install Jenkins and its dependencies.

sudo apt install jenkins


--------for this error below command used -----------------------------------------------------------------------------------
E: Package 'jenkins' has no installation candidate

This is the Debian package repository of Jenkins to automate installation and upgrade. To use this repository, first add the key to your system:

    
  curl -fsSL https://pkg.jenkins.io/debian/jenkins.io-2023.key | sudo tee \
    /usr/share/keyrings/jenkins-keyring.asc > /dev/null
  
Then add a Jenkins apt repository entry:
    
  echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
    https://pkg.jenkins.io/debian binary/ | sudo tee \
    /etc/apt/sources.list.d/jenkins.list > /dev/null
  
Update your local package index, then finally install Jenkins:

   

  sudo apt-get update  
  sudo apt-get install jenkins
-------------------------------------------------------------------------------------------------------------------------

Step 2: Start Jenkins
Jenkins is started upon installation on Ubuntu 20.04. You can confirm it’s running status by executing the command:

$ systemctl status jenkins

systemctl :-The systemctl command manages both system and service configurations, enabling administrators to manage the OS and control the status of services

If everything went well, the beginning of the status output shows that the service is active and configured to start at boot:

Output
● jenkins.service - LSB: Start Jenkins at boot time
   Loaded: loaded (/etc/init.d/jenkins; generated)
   Active: active (exited) since Fri 2020-06-05 21:21:46 UTC; 45s ago
     Docs: man:systemd-sysv-generator(8)
    Tasks: 0 (limit: 1137)
   CGroup: /system.slice/jenkins.service
Now that Jenkins is up and running, let’s adjust our firewall rules so that we can reach it from a web browser to complete the initial setup.

--------------------------------------------------------------------------------------------------------------------------
Step 3 — Opening the Firewall
To set up a UFW firewall, visit Initial Server Setup with Ubuntu 20.04, Step 4- Setting up a Basic Firewall. By default, Jenkins runs on port 8080. We’ll open that port using ufw:

sudo ufw allow 8080
Note: If the firewall is inactive, the following commands will allow OpenSSH and enable the firewall:

sudo ufw allow OpenSSH
sudo ufw enable
Check ufw’s status to confirm the new rules:

sudo ufw status
You’ll notice that traffic is allowed to port 8080 from anywhere:

Output
Status: active

To                         Action      From
--                         ------      ----
OpenSSH                    ALLOW       Anywhere
8080                       ALLOW       Anywhere
OpenSSH (v6)               ALLOW       Anywhere (v6)
8080 (v6)                  ALLOW       Anywhere (v6)
With Jenkins installed and our firewall configured, we can complete the installation stage and dive into Jenkins setup.
---------------------------------------------------------------------------------------------------
jenkins url : http://ec2-16-16-91-57.eu-north-1.compute.amazonaws.com:8080/
